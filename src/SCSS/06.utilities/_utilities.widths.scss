/**
    ==========================================================================
    #WIDTHS
    ========================================================================== 

    Generaremos unas serie de clases de utilidad que nos ayudaran a dar anchos
    fluidos a cualquier elemento que sea aplicado, por ejemplo:
    
    <img src="" alt="" class="u-1/2" />
 
    Estas clases seran muy utilizadas con nuestro sistema de layout:
 
    <div class="o-layout__item  u-1/2">
 
    Usando Sass MQ configuration, generaremos variantes responsive de cada clase:
 
    <div class="o-layout__item  u-1/1  u-1/2@tablet  u-1/3@desktop">
 
    Tambien generaremos clases con las que podremos correr elementos hacia la derecha
    o izquierda una cantidad especificada:
 
    <div class="o-layout__item  u-2/3  u-pull-1/3">
**/



/**
    Fracciones que se generaran:

    .u-1/2
    .u-2/5   
    .u-3/4
    .u-2/3

**/

$fractions: 1 2 3 4 5 6 7 8 9 10 11 12 !default;

/**
    El delimitador utilizado para las fracciones, esto puede modificarse
**/

$widths-delimiter: \/ !default;

/**
    El delimitador para los breakpoints
    <div class="u-3/12@mobile">
**/

$widths-breakpoint-separator: \@ !default;

/**
    Una funcion que creara nuestras clases. Se le pasa las columnas que tendremos, 
    que es el objecto ya creado de fracciones y un flag para crear o no las clases responsive. E.g. to create thirds
    Ejemplo para crear tercios y cuartos con el breakpoint sm (small)

    @include widths(3 4, -sm); Resultado de clases u-1/3-sm
**/

@mixin widths($columns, $breakpoint: null, $breakpointValue: 0px) {

    //Se hace un loop por cada denominador de nuestras fracciones
    @each $denominator in $columns {

        // Se crea una clase por cada uno hasta llegar 
        //al denominardor es decir la unidad
        @for $numerator from 1 through $denominator {
            
            @if ($breakpoint != null) {

                @media (max-width: $breakpointValue) {

                    .u-#{$numerator}#{$widths-delimiter}#{$denominator}#{$breakpoint} {
                        width: ($numerator / $denominator) * 100% !important;
                    }
                    
                    .u-width--fit#{$breakpoint}{
                        width: fit-content;
                    }

                    .u-min_width--0#{$breakpoint}{
                        min-width: 0;
                    }

                    .u-push-#{$numerator}#{$widths-delimiter}#{$denominator}#{$breakpoint} {
                        position: relative !important;
                        right: auto !important; /* [1] */
                        left: ($numerator / $denominator) * 100% !important;
                    }

                    .u-pull-#{$numerator}#{$widths-delimiter}#{$denominator}#{$breakpoint} {
                        position: relative !important;
                        right: ($numerator / $denominator) * 100% !important;
                        left: auto !important; /* [1] */
                    }

                }

            }

            @else{

                // Construimos la clase con el formato`.u-3/4[@<breakpoint>]`.
                .u-#{$numerator}#{$widths-delimiter}#{$denominator}#{$breakpoint} {
                    width: ($numerator / $denominator) * 100% !important;
                }
                
                .u-width--fit#{$breakpoint}{
                    width: fit-content;
                }

                .u-min_width--0#{$breakpoint}{
                    min-width: 0;
                }
                
                /*
                    1. Reset any leftover or conflicting `left`/`right` values.
                */
    
                // Build a class in the format `.u-push-1/2[@<breakpoint>]`.
                .u-push-#{$numerator}#{$widths-delimiter}#{$denominator}#{$breakpoint} {
                    position: relative !important;
                    right: auto !important; /* [1] */
                    left: ($numerator / $denominator) * 100% !important;
                }
    
                // Build a class in the format `.u-pull-5/6[@<breakpoint>]`.
                .u-pull-#{$numerator}#{$widths-delimiter}#{$denominator}#{$breakpoint} {
                    position: relative !important;
                    right: ($numerator / $denominator) * 100% !important;
                    left: auto !important; /* [1] */
                }

            }
        }
    }
    @if ($breakpoint != null) {

        // Create auto push and pull classes.
        .u-push-none#{$breakpoint} {
            left: auto !important;
        }

        .u-pull-none#{$breakpoint} {
            right: auto !important;
        }

    }
}

//Esto es lo que ejecuta nuestra funcion para generar las clsases
@include widths($fractions);





/**
    Usando sass-MQ lo siguiente nos generara los quiebres para los diferentes breakpoints:
    mobile: 320px
    tablet: 740px
    desktop: 980px
    wide: 1300px
**/

@each $bp-name, $bp-value in $breakpoints {
    @include widths($fractions, #{$widths-breakpoint-separator}#{$bp-name}, $bp-value);
}
