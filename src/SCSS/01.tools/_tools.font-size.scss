/** 
  ========================================================================
  #FONT-SIZE
  ======================================================================== 

  Genera una fuente en rem con un line-height sin unidad, todo en base a las 
  unidades definidas en nuestras settings. El uso es simple:

  @include font-size(18px);

  Tambien podemos especificar el tama√±o de line height:

  @include font-size(16px, 1);

  Igualmente la forma recomendada de aumentar el line-height es con la variable modifier,
  Esta agregara o eliminara lineas a nuestra altura, en base a la altura establesida en nuestras
  settings

  add 2 lines:
    @include font-size(24px, $modifier: +2);

  subtract 1 line:
    @include font-size(24px, $modifier: -1); 

**/

@mixin font-size($font-size, $line-height: auto, $modifier: 0) {

    @if (type-of($font-size) == number) {
      @if (unit($font-size) != "px") {
        @error "`#{$font-size}` needs to be a pixel value.";
      }
    } @else {
      @error "`#{$font-size}` needs to be a number.";
    }
  
    // We provide a `px` fallback for old IEs not supporting `rem` values.
    font-size: $font-size;
    font-size: ($font-size / $global-font-size) * 1rem;
  
    @if ($line-height == "auto") {
  
      // Define how many grid lines each text line should span.
      // By default, we set it to the minimum number of lines necessary
      // in order to contain the defined font-size, +1 for some breathing room.
      // This can be modified with the `$modifier` parameter.
      $lines: ceil($font-size / $global-baseline) + $modifier + 1;
      $line-height: $lines * $global-baseline;
  
      line-height: ($line-height / $font-size);
    }
  
    @else {
  
      @if (type-of($line-height) == number or $line-height == "inherit" or $line-height == "normal") {
        line-height: $line-height;
      }
  
      @else if ($line-height != 'none' and $line-height != false) {
        @error "oh! `#{$line-height}` is not a valid value for `$line-height`."
      }
  
    }
  
  }